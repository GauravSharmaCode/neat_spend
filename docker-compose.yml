services:
  # PostgreSQL DB
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: neatspend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d neatspend"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/neatspend_users?schema=public
      PORT: 3001
      SERVICE_NAME: user-service
      JWT_SECRET: your-development-jwt-secret-change-in-production
      LOG_LEVEL: info
      DB_LOG_QUERIES: true
      DB_LOG_SLOW_QUERIES: true
      DB_SLOW_QUERY_THRESHOLD: 100
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # SMS Sync Worker
  sms-sync-worker:
    build:
      context: ./services/sms-sync-worker
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "4002:4002"
    environment:
      NODE_ENV: development
      PORT: 4002
      SERVICE_NAME: sms-sync-worker
      LOG_LEVEL: info
      USER_SERVICE_URL: http://user-service:3001
      GOOGLE_CLOUD_PROJECT_ID: ultra-heading-467619-r5
      GOOGLE_APPLICATION_CREDENTIALS: /app/keys/ultra-heading-467619-r5-917350c3132c.json
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx API Gateway
  nginx-gateway:
    build:
      context: ./services/nginx-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8090:8090"
    depends_on:
      user-service:
        condition: service_healthy
      sms-sync-worker:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8090/nginx-health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
